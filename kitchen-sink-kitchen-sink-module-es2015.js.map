{"version":3,"sources":["./src/app/kitchen-sink/home/components/home/home.component.html","./src/app/kitchen-sink/input-output/components/counter/counter.component.html","./src/app/kitchen-sink/input-output/components/input-output/input-output.component.html","./src/app/kitchen-sink/angular-directives/components/angular-directives.ts","./src/app/kitchen-sink/angular-directives/components/hello-directives.ts","./src/app/kitchen-sink/angular-directives/components/ngclass-directive.ts","./src/app/kitchen-sink/angular-directives/components/ngfor-directive.ts","./src/app/kitchen-sink/angular-directives/components/ngif-directive.ts","./src/app/kitchen-sink/angular-directives/components/nglocalization-directive.ts","./src/app/kitchen-sink/angular-directives/components/ngstyle-directive.ts","./src/app/kitchen-sink/angular-directives/components/ngswitch-directive.ts","./src/app/kitchen-sink/angular-directives/index.ts","./src/app/kitchen-sink/change-detection/components/change-detection.ts","./src/app/kitchen-sink/change-detection/components/user-info-default.ts","./src/app/kitchen-sink/change-detection/components/user-info-push.ts","./src/app/kitchen-sink/change-detection/index.ts","./src/app/kitchen-sink/change-detection/models/user.ts","./src/app/kitchen-sink/di-tree/components/component1.ts","./src/app/kitchen-sink/di-tree/components/component2.ts","./src/app/kitchen-sink/di-tree/components/component3.ts","./src/app/kitchen-sink/di-tree/components/component4.ts","./src/app/kitchen-sink/di-tree/components/component5.ts","./src/app/kitchen-sink/di-tree/components/component6.ts","./src/app/kitchen-sink/di-tree/components/di-tree.ts","./src/app/kitchen-sink/di-tree/index.ts","./src/app/kitchen-sink/di-tree/services/service1.ts","./src/app/kitchen-sink/di-tree/services/service2.ts","./src/app/kitchen-sink/di-tree/services/service3.ts","./src/app/kitchen-sink/di-tree/services/service4.ts","./src/app/kitchen-sink/forms/components/control-form/control-form.component.ts","./src/app/kitchen-sink/forms/components/form2/form2.component.ts","./src/app/kitchen-sink/forms/components/my-form/my-form.component.ts","./src/app/kitchen-sink/forms/index.ts","./src/app/kitchen-sink/home/components/home/home.component.css","./src/app/kitchen-sink/home/components/home/home.component.ts","./src/app/kitchen-sink/home/index.ts","./src/app/kitchen-sink/input-output/components/counter/counter.component.css","./src/app/kitchen-sink/input-output/components/counter/counter.component.ts","./src/app/kitchen-sink/input-output/components/input-output/input-output.component.css","./src/app/kitchen-sink/input-output/components/input-output/input-output.component.ts","./src/app/kitchen-sink/input-output/index.ts","./src/app/kitchen-sink/kitchen-sink-routing.module.ts","./src/app/kitchen-sink/kitchen-sink.module.ts","./src/app/kitchen-sink/metadata-test/components/metadata-test.ts","./src/app/kitchen-sink/metadata-test/index.ts","./src/app/kitchen-sink/stress-tester/components/stress-tester.ts","./src/app/kitchen-sink/stress-tester/index.ts","./src/app/kitchen-sink/todo-app/components/todo-app.component.ts","./src/app/kitchen-sink/todo-app/components/todo-input.component.ts","./src/app/kitchen-sink/todo-app/components/todo-list.component.ts","./src/app/kitchen-sink/todo-app/index.ts","./src/app/kitchen-sink/todo-app/models/todo.model.ts","./src/app/kitchen-sink/todo-app/services/format.service.ts","./src/app/kitchen-sink/todo-app/services/todo.service.ts"],"names":[],"mappings":"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","file":"kitchen-sink-kitchen-sink-module-es2015.js","sourcesContent":["export default \"<div class=\\\"flex vh-100\\\">\\n  <div class=\\\"w-20 bg-light-yellow\\\">\\n    <ul class=\\\"list\\\">\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'home' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink']\\\">Home</a>\\n      </li>\\n      <!-- <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'welcome' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', 'lazy-load/lazy']\\\">Lazy Loaded Module</a>\\n      </li> -->\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'control-form' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', 'control-form']\\\">ControlForm</a>\\n      </li>\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'my-form' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', 'my-form']\\\">Form Component</a>\\n      </li>\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'form2' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', 'form2']\\\">NgModel Form</a>\\n      </li>\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'input-output' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', 'input-output']\\\">InputOutput</a>\\n      </li>\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'todo-app' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', 'todo-app']\\\">TodoApp</a>\\n      </li>\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'di-tree' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', 'di-tree']\\\">DITree</a>\\n      </li>\\n      <!-- <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'angular-directives' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', 'angular-directives']\\\">AngularDirectives</a>\\n      </li>\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'change-detection' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', 'change-detection']\\\">ChangeDetection</a>\\n      </li>\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'stress-tester' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', './stress-tester']\\\">StressTester</a>\\n      </li>\\n      <li class=\\\"pa2\\\" [ngClass]=\\\"{ active: path == 'metadata-test' }\\\">\\n        <a [routerLink]=\\\"['/kitchen-sink', './metadata-test']\\\">MetadataTest</a>\\n      </li> -->\\n    </ul>\\n  </div>\\n  <div class=\\\"w-80 pa3 bg-light-green\\\">\\n    <h1>{{ title }}</h1>\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","export default \"<div>\\n  <h4>Count: {{ count }}</h4>\\n  <button class=\\\"bn br4 pt2 pb2 pl4 pr4 white bg-dark-red\\\" (click)=\\\"increment()\\\">\\n    Increment\\n  </button>\\n  <br />\\n  <br />\\n  <button class=\\\"bn br4 pt2 pb2 pl4 pr4 white bg-dark-blue\\\" (click)=\\\"sendMessage()\\\">\\n    SendMessage\\n  </button>\\n  <br />\\n</div>\\n\"","export default \"<h4>Parent Num: {{ num }}</h4>\\n<h4>Parent Count: {{ parentCount }}</h4>\\n<counter [count]=\\\"num\\\" (result)=\\\"onChange($event)\\\" (displayMessage)=\\\"displayMessage($event)\\\"> </counter>\\n<div *ngIf=\\\"name && message\\\" class=\\\"pt2 pb2\\\">\\n  <h4>{{ name }}: {{ message }}</h4>\\n</div>\\n<br />\\n\\n<button\\n  class=\\\"br4 pt2 pb2 pl4 pr4 white bg-dark-green bn\\\"\\n  [ngClass]=\\\"{ active: isOn, disabled: isDisabled }\\\"\\n  (click)=\\\"toggle(!isOn)\\\"\\n>\\n  Click me!\\n</button>\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'angular-directives',\n  template: `\n  <div>\n    <ngif-directive></ngif-directive>\n    <hr/>\n    <ngfor-directive></ngfor-directive>\n    <hr/>\n    <ngswitch-directive></ngswitch-directive>\n    <hr/>\n    <ngclass-directive></ngclass-directive>\n    <hr/>\n    <ngstyle-directive></ngstyle-directive>\n    <hr/>\n    <nglocalization-directive></nglocalization-directive>\n  </div>\n  `\n})\nexport default class AngularDirectivesComponent {}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'hello-directives',\n  template: `\n  <h4>\n    Message: {{msg}}\n  </h4>\n  `\n})\nexport default class HelloDirectives {\n  @Input() msg: string;\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n   selector: 'ngclass-directive',\n  template: `\n     <div class=\"button\"\n       [ngClass]=\"{active: isOn, disabled: isDisabled}\"\n         (click)=\"toggle(!isOn)\">\n         <h4>Click me!</h4>\n     </div>`,\n  styles: [`\n    .button {\n      padding: 10px;\n      border: medium solid black;\n    }\n\n    .active {\n      background-color: red;\n    }\n\n    .disabled {\n      color: gray;\n      border: medium solid gray;\n    }\n  `]\n})\nexport default class NgClassDirective {\n  isOn = false;\n  @Input() isDisabled: boolean = false;\n\n  toggle(newState) {\n    if (!this.isDisabled) {\n      this.isOn = newState;\n    }\n  }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngfor-directive',\n  template: `\n  <div>\n     <hello-directives *ngFor=\"let name of names\" [msg]=\"'Hello from ' + name\">\n     </hello-directives>\n  </div>\n  `\n})\nexport default class NgForDirective {\n  private names = [\n    'John',\n    'Sam',\n    'Mike',\n    'Sumit',\n    'Igor'\n  ];\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngif-directive',\n  template: `\n  <div>\n    <hello-directives msg=\"Hello from John!!\" *ngIf=\"sayHello\">\n    </hello-directives>\n\n    <hello-directives msg=\"Hi from John!!\" *ngIf=\"!sayHello\">\n    </hello-directives>\n\n    <button class=\"btn btn-primary\"\n       (click)=\"toggle()\">\n      {{sayHello ? 'Say Hi': 'Say Hello'}}\n    </button>\n  </div>\n  `\n})\nexport default class NgIfDirective {\n  private sayHello: boolean = false;\n\n  toggle() {\n    this.sayHello = !this.sayHello;\n  }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'nglocalization-directive',\n  template: `\n    <h4>Value = {{value}}</h4>\n    <button class=\"btn btn-warning\" (click)=\"inc()\">Increment</button>\n    <h4 [ngPlural]=\"value\">\n      <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n      <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n      <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n      <ng-template ngPluralCase=\"other\">there is some number</ng-template>\n    </h4>\n  `,\n})\nexport default class NgLocalizationDirective {\n  value: any = 'init';\n  inc() {\n    this.value = this.value === 'init' ? 0 : this.value + 1;\n  }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n selector: 'ngstyle-directive',\n template: `\n   <h1 [ngStyle]=\"{'font-style': style,\n    'font-size': size, 'font-weight': weight}\">\n     Change style of this text!\n   </h1>\n\n   <hr>\n   <label>Italic: <input type=\"checkbox\" (change)=\"changeStyle($event)\"></label>\n   <label>Bold: <input type=\"checkbox\" (change)=\"changeWeight($event)\"></label>\n   <label>Size: <input type=\"text\" [value]=\"size\"\n   (change)=\"size = $event.target.value\"></label>\n `\n})\nexport default class NgStyleDirective {\n   style = 'normal';\n   weight = 'normal';\n   size = '20px';\n\n   changeStyle($event: any) {\n     this.style = $event.target.checked ? 'italic' : 'normal';\n   }\n\n   changeWeight($event: any) {\n     this.weight = $event.target.checked ? 'bold' : 'normal';\n   }\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngswitch-directive',\n  template: `\n  <div>\n     <div class=\"container\" [ngSwitch]=\"color\">\n        <hello-directives *ngSwitchCase=\"'red'\" [msg]=\"'Color is Red'\">\n        </hello-directives>\n\n        <hello-directives *ngSwitchCase=\"'green'\" [msg]=\"'Color is Green'\">\n        </hello-directives>\n\n        <hello-directives *ngSwitchCase=\"'yellow'\" [msg]=\"'Color is Yellow'\">\n        </hello-directives>\n\n        <hello-directives *ngSwitchCase=\"'blue'\" [msg]=\"'Color is Blue'\">\n        </hello-directives>\n\n        <hello-directives *ngSwitchCase=\"'grey'\" [msg]=\"'Color is Grey'\">\n        </hello-directives>\n\n        <hello-directives *ngSwitchDefault [msg]=\"'No Color Selected'\">\n        </hello-directives>\n     </div>\n     <button class=\"btn btn-success\" (click)=\"switch()\">Switch Color</button>\n  </div>\n  `\n})\nexport default class NgSwitchDirective {\n  private color = 'red';\n\n  private colors = [\n    'red',\n    'green',\n    'yellow',\n    'blue',\n    'grey',\n    'aaa',\n    'bbb'\n  ];\n\n  switch() {\n    const random = parseInt(Math.random() * 6 + '', 10);\n    this.color = this.colors[random];\n  }\n\n}\n","import AngularDirectivesComponent from './components/angular-directives';\nimport HelloDirectives from './components/hello-directives';\nimport NgClassDirective from './components/ngclass-directive';\nimport NgForDirective from './components/ngfor-directive';\nimport NgIfDirective from './components/ngif-directive';\nimport NgLocalizationDirective from './components/nglocalization-directive';\nimport NgStyleDirective from './components/ngstyle-directive';\nimport NgSwitchDirective from './components/ngswitch-directive';\n\nexport const ANGULAR_DIRECTIVES_COMPONENTS = [\n  AngularDirectivesComponent, HelloDirectives,\n  NgClassDirective, NgForDirective, NgIfDirective,\n  NgLocalizationDirective, NgStyleDirective, NgSwitchDirective,\n];\n\nexport { AngularDirectivesComponent };\n","import {Component} from '@angular/core';\nimport {User} from '../models/user';\n\n@Component({\n  selector: 'change-detection',\n  template: `\n  <div>\n    <button type=\"button\" class=\"btn btn-danger\"\n      (click)=\"reset()\">\n      Reset\n    </button>\n\n    <button type=\"button\" class=\"btn btn-primary\"\n      (click)=\"makeUserOnline(0)\">\n      Make User Online (mutable)\n    </button>\n\n    <button type=\"button\" class=\"btn btn-success\"\n      (click)=\"makeUserOnline(1)\">\n      Make User Online (immutable)\n    </button>\n\n    <user-info-default [user]=\"user\">\n    </user-info-default>\n\n    <user-info-push [user]=\"user\">\n    </user-info-push>\n\n  </div>\n  `\n})\nexport default class ChangeDetectionComponent {\n  private user = new User(1, 'John Doe', 'john@doe.com');\n\n  reset() {\n    this.user = new User(1, 'John Doe', 'john@doe.com');\n  }\n\n  makeUserOnline(type: number) {\n    if (type === 0) {\n      this.user.isOnline = true;\n    } else if (type === 1) {\n      this.user = Object.assign({}, this.user, {isOnline: true});\n    }\n  }\n}\n","import {Component, Input, ChangeDetectionStrategy}\n  from '@angular/core';\nimport {User} from '../models/user';\n\n@Component({\n  selector: 'user-info-default',\n  changeDetection: ChangeDetectionStrategy.Default,\n  styles: [`\n    .bg {\n      background-color: red;\n    }\n  `],\n  template: `\n    <div [ngClass]=\"{'bg' : user.isOnline}\">\n      <h4>User Info Default</h4>\n      <p>\n        <label>User Id: {{user.id}} {{user.isOnline}}</label>\n      </p>\n    </div>`\n})\nexport class UserInfoDefault {\n  @Input() user: User;\n}\n","import {Component, Input, ChangeDetectionStrategy}\n  from '@angular/core';\nimport {User} from '../models/user';\n\n@Component({\n  selector: 'user-info-push',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [`\n    .bg {\n      background-color: red;\n    }\n  `],\n  template: `\n    <div [ngClass]=\"{'bg' : user.isOnline}\">\n      <h4>User Info OnPush</h4>\n      <p>\n        <label>User Id: {{user.id}} {{user.isOnline}}</label>\n      </p>\n    </div>`\n})\nexport class UserInfoPush {\n  @Input() user: User;\n}\n","import ChangeDetectionComponent from './components/change-detection';\nimport { UserInfoDefault } from './components/user-info-default';\nimport { UserInfoPush } from './components/user-info-push';\n\nexport const CHANGE_DETECTION_COMPONENTS = [\n  ChangeDetectionComponent,\n  UserInfoPush, UserInfoDefault\n];\n\nexport { ChangeDetectionComponent };\n","export class User {\n\n  constructor(\n    public id: number,\n    public name: string,\n    public email: string,\n    public isOnline: boolean = false\n    ) { }\n}\n","import { Component, Inject } from '@angular/core';\n\nimport { Service3 } from '../services/service3';\n\n@Component({\n  selector: 'component1',\n  template: `\n    <p class=\"link blue\">Component One</p>\n    <p>{{ service3Value }}</p>\n    <div class=\"pl4\">\n      <component3></component3>\n      <component4></component4>\n    </div>\n  `\n})\nexport class Component1 {\n  service3Value: string;\n\n  constructor(private s3: Service3) {\n    this.service3Value = s3.value;\n  }\n}\n","import { Component, Inject } from '@angular/core';\n\nimport { Service2 } from '../services/service2';\n\n@Component({\n  selector: 'component2',\n  template: `\n    <p class=\"link blue\">\n      Component Two\n    </p>\n    <p>{{ service2Value }}</p>\n    <div class=\"pl4\">\n      <component5></component5>\n      <component6></component6>\n    </div>\n  `\n})\nexport class Component2 {\n  service2Value: string;\n\n  constructor(private s2: Service2) {\n    this.service2Value = s2.value;\n  }\n}\n","import { Component, Inject, forwardRef } from '@angular/core';\n\nimport { Service1 } from '../services/service1';\nimport { Service3 } from '../services/service3';\n\n@Component({\n  selector: 'component3',\n  template: `\n    <p class=\"link blue\">Component Three</p>\n    <p>{{ service1Value }}</p>\n    <p>{{ service3Value }}</p>\n  `\n})\nexport class Component3 {\n  service1Value: string;\n  service3Value: string;\n\n  constructor(private s1: Service1, @Inject(forwardRef(() => Service3)) private s3: Service3) {\n    this.service1Value = s1.value;\n    this.service3Value = s3.value;\n  }\n}\n","import { Component, Inject } from '@angular/core';\n\nimport { Service1 } from '../services/service1';\nimport { Service4 } from '../services/service4';\n\n@Component({\n  selector: 'component4',\n  template: `\n    <p class=\"link blue\">Component Four</p>\n    <p>{{ service1Value }}</p>\n    <p>{{ service4Value }}</p>\n  `\n})\nexport class Component4 {\n  service1Value: string;\n  service4Value: string;\n\n  constructor(private s1: Service1, @Inject(Service4) private s4) {\n    this.service1Value = s1.value;\n    this.service4Value = s4.value;\n  }\n}\n","import { Component, Inject } from '@angular/core';\n\nimport { Service3 } from '../services/service3';\nimport { Service4 } from '../services/service4';\n\n@Component({\n  selector: 'component5',\n  providers: [Service3, Service4],\n  template: `\n    <p class=\"link blue\">Component Five</p>\n    <p>{{ service3Value }}</p>\n    <p>{{ service4Value }}</p>\n  `\n})\nexport class Component5 {\n  service3Value: string;\n  service4Value: string;\n\n  constructor(private s3: Service3, private s4: Service4) {\n    this.service3Value = s3.value;\n    this.service4Value = s4.value;\n  }\n}\n","import { Component, Inject } from '@angular/core';\n\nimport { Service1 } from '../services/service1';\nimport { Service2 } from '../services/service2';\n\n@Component({\n  selector: 'component6',\n  template: `\n    <p class=\"link blue\">Component Six</p>\n    <p>{{ service1Value }}</p>\n    <p>{{ service2Value }}</p>\n  `\n})\nexport class Component6 {\n  service1Value: string;\n  service2Value: string;\n\n  constructor(private s1: Service1, private s2: Service2) {\n    this.service1Value = s1.value;\n    this.service2Value = s2.value;\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { Service1 } from '../services/service1';\n\n@Component({\n  selector: 'di-tree',\n  template: `\n    <p class=\"link blue\">\n      DI App\n    </p>\n    <p>{{ service1Value }}</p>\n    <div class=\"pl4\">\n      <component1></component1>\n      <component2></component2>\n    </div>\n  `\n})\nexport class DITreeComponent {\n  service1Value: string;\n\n  constructor(private s1: Service1) {\n    this.service1Value = s1.value;\n  }\n}\n","import { DITreeComponent } from './components/di-tree';\n\nimport { Component1 } from './components/component1';\nimport { Component2 } from './components/component2';\nimport { Component3 } from './components/component3';\nimport { Component4 } from './components/component4';\nimport { Component5 } from './components/component5';\nimport { Component6 } from './components/component6';\n\nimport { Service1 } from './services/service1';\nimport { Service2 } from './services/service2';\nimport { Service3 } from './services/service3';\nimport { Service4 } from './services/service4';\n\nexport const DI_TREE_SERVICES = [\n  Service1, Service2, Service3, Service4,\n];\n\nexport const DI_TREE_COMPONENTS = [\n  DITreeComponent,\n  Component1, Component2, Component3,\n  Component4, Component5, Component6,\n];\n\nexport { DITreeComponent };\n","import { Injectable } from '@angular/core';\n\nexport class Service1 {\n  value = 'Service One';\n  constructor() {\n    this.value = this.value + ' Id: ' + Math.floor(Math.random() * 500);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport class Service2 {\n  value = 'Service Two';\n  constructor() {\n    this.value = this.value + ' Id: ' + Math.floor(Math.random() * 500);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport class Service3 {\n  value = 'Service Three';\n  constructor() {\n    this.value = this.value + ' Id: ' + Math.floor(Math.random() * 500);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport class Service4 {\n  value = 'Service Four';\n  constructor() {\n    this.value = this.value + ' Id: ' + Math.floor(Math.random() * 500);\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'control-form',\n  template: `\n    <div>\n      <form (submit)=\"onSubmit(formGroup.value)\">\n        <div class=\"flex pa2\">\n          <label class=\"w-third\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            placeholder=\"Name\"\n            class=\"ba pa2 w-50\"\n            [formControl]=\"formGroup.controls['name']\"\n          />\n        </div>\n        <div class=\"flex pa2\">\n          <label class=\"w-third\">Email</label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            placeholder=\"Email\"\n            class=\"ba pa2 w-50\"\n            [formControl]=\"formGroup.controls['email']\"\n          />\n        </div>\n        <div class=\"flex pa2\">\n          <label class=\"w-third\"></label>\n          <button type=\"submit\" class=\"br4 bn pt2 pb2 pl4 pr4 white bg-dark-green\">Submit</button>\n        </div>\n      </form>\n    </div>\n  `\n})\nexport class ControlFormComponent {\n  formGroup: FormGroup;\n\n  constructor() {\n    this.formGroup = new FormGroup({\n      name: new FormControl('John Doe'),\n      email: new FormControl('johndoe@gmail.com')\n    });\n  }\n\n  onSubmit(value: string): void {\n    console.log('you submitted value: ', value);\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'form2',\n  template: `\n    <div>\n      <form (submit)=\"onSubmit(myform)\">\n        <div class=\"flex pa2\">\n          <label class=\"w-third\">Description</label>\n          <input type=\"text\" [(ngModel)]=\"myform.description\" name=\"description\" required class=\"ba pa2 w-50\" />\n        </div>\n        <div class=\"flex pa2\">\n          <label class=\"w-third\">Points</label>\n          <input\n            type=\"number\"\n            min=\"1\"\n            max=\"10\"\n            step=\"1\"\n            required\n            name=\"points\"\n            [(ngModel)]=\"myform.points\"\n            class=\"ba pa2 w-50\"\n          />\n        </div>\n        <div class=\"flex pa2\">\n          <label class=\"w-third\">Status</label>\n          <select [(ngModel)]=\"myform.status\" class=\"ba pa2 w-50\" name=\"status\">\n            <option value=\"0\">Pending</option>\n            <option value=\"1\">Started</option>\n            <option value=\"2\">Finished</option>\n            <option value=\"3\">Overdue</option>\n          </select>\n        </div>\n        <div class=\"flex pa2\">\n          <label class=\"w-third\">Priority</label>\n          <select [(ngModel)]=\"myform.priority\" class=\"ba pa2 w-50\" name=\"priority\">\n            <option value=\"0\">Low</option>\n            <option value=\"1\">Medium</option>\n            <option value=\"2\">High</option>\n          </select>\n        </div>\n        <div class=\"flex pa2\">\n          <label class=\"w-third\">Date</label>\n          <input type=\"date\" [(ngModel)]=\"myform.targetDate\" class=\"ba pa2 w-50\" name=\"targetDate\" />\n        </div>\n        <div class=\"flex pa2\">\n          <label class=\"w-third\"></label>\n          <button type=\"submit\" class=\"br4 pt2 pb2 pl4 pr4 bn white bg-dark-green\">Submit</button>\n        </div>\n      </form>\n    </div>\n  `\n})\nexport class Form2Component {\n  public myform: any = {};\n\n  onSubmit(myform: any) {\n    console.log(myform);\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'my-form',\n  template: `\n    <form (submit)=\"onSubmit()\" novalidate>\n      <div class=\"flex pa2\">\n        <label for=\"email\" class=\"w-third\">Email:</label>\n        <input class=\"ba pa2 w-50\" type=\"email\" id=\"email\" [formControl]=\"email\" />\n      </div>\n\n      <div class=\"flex pa2\">\n        <label for=\"password\" class=\"w-third\">Password:</label>\n        <input class=\"ba pa2 w-50\" type=\"password\" id=\"password\" [formControl]=\"password\" />\n      </div>\n      <br />\n      <div class=\"flex pa2\">\n        <label class=\"w-third\"></label>\n        <button class=\"br4 pt2 pb2 pl4 pr4 white bg-dark-green bn\" type=\"submit\">Register</button>\n      </div>\n    </form>\n  `\n})\nexport class MyFormComponent {\n  private email: FormControl = new FormControl();\n  private password: FormControl = new FormControl();\n  onSubmit() {\n    console.log(this.email, this.password);\n  }\n}\n","export { MyFormComponent } from './components/my-form/my-form.component';\nexport { ControlFormComponent } from './components/control-form/control-form.component';\nexport { Form2Component } from './components/form2/form2.component';\n","export default \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2tpdGNoZW4tc2luay9ob21lL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { map, filter } from 'rxjs/operators';\n\nconst TITLES = {\n  '': 'Home',\n  home: 'Home',\n  'control-form': 'Control Form',\n  'my-form': 'Form Component',\n  form2: 'NgModel Form',\n  'input-output': 'Input Output',\n  'todo-app': 'Todo App',\n  'di-tree': 'DI Tree',\n  'angular-directives': 'Angular Directives',\n  'change-detection': 'Change Detection'\n};\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  title: string;\n  constructor(private router: Router) {\n    router.events.pipe(filter(e => e instanceof NavigationEnd)).subscribe((e: NavigationEnd) => {\n      const path = e.url.replace('/kitchen-sink', '').replace('/', '');\n      this.title = TITLES[path];\n    });\n  }\n}\n","export { HomeComponent } from './components/home/home.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2tpdGNoZW4tc2luay9pbnB1dC1vdXRwdXQvY29tcG9uZW50cy9jb3VudGVyL2NvdW50ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.css']\n})\nexport class CounterComponent{\n\n  @Input() count: number = 0;\n  @Output() result: EventEmitter<number> = new EventEmitter<number>();\n  @Output() displayMessage: EventEmitter<any> = new EventEmitter<any>();\n\n  increment() {\n    this.count++;\n    this.result.emit(this.count);\n  }\n\n  sendMessage() {\n    const data = { 'name': 'John11', 'message': 'Hello there11!!!' };\n    this.displayMessage.emit(data);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2tpdGNoZW4tc2luay9pbnB1dC1vdXRwdXQvY29tcG9uZW50cy9pbnB1dC1vdXRwdXQvaW5wdXQtb3V0cHV0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'input-output',\n  templateUrl: './input-output.component.html',\n  styleUrls: ['./input-output.component.css']\n})\nexport class InputOutputComponent {\n  message: string;\n  name: string;\n  num: number;\n  parentCount: number;\n  isOn = false;\n  isDisabled = false;\n\n  constructor() {\n    this.num = 0;\n    this.parentCount = 0;\n  }\n\n  onChange(val: any) {\n    this.parentCount = val;\n  }\n\n  toggle(newState) {\n    if (!this.isDisabled) {\n      this.isOn = newState;\n    }\n  }\n\n  displayMessage(data: any) {\n    this.message = data.message;\n    this.name = data.name;\n  }\n}\n","export { InputOutputComponent } from './components/input-output/input-output.component';\nexport { CounterComponent } from './components/counter/counter.component';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { InputOutputComponent } from './input-output';\nimport { MyFormComponent, ControlFormComponent, Form2Component } from './forms';\nimport { DITreeComponent } from './di-tree';\nimport { AngularDirectivesComponent } from './angular-directives';\nimport { ChangeDetectionComponent } from './change-detection';\nimport { StressTesterComponent } from './stress-tester';\nimport { MetadataTestComponent } from './metadata-test';\nimport { TodoAppComponent } from './todo-app';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    children: [\n      { path: 'input-output', component: InputOutputComponent },\n      // { path: 'lazy-load', loadChildren: 'app/lazy-load/lazy-load.module#LazyLoadModule' },\n      { path: 'my-form', component: MyFormComponent },\n      { path: 'control-form', component: ControlFormComponent },\n      { path: 'form2', component: Form2Component },\n      { path: 'di-tree', component: DITreeComponent },\n      { path: 'todo-app', component: TodoAppComponent },\n      { path: 'angular-directives', component: AngularDirectivesComponent },\n      { path: 'change-detection', component: ChangeDetectionComponent },\n      { path: 'stress-tester', component: StressTesterComponent },\n      { path: 'metadata-test', component: MetadataTestComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class KitchenSinkRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { KitchenSinkRoutingModule } from './kitchen-sink-routing.module';\n\n// demos\nimport { HomeComponent } from './home';\nimport { CounterComponent, InputOutputComponent } from './input-output';\nimport { MyFormComponent, ControlFormComponent, Form2Component } from './forms';\nimport { DI_TREE_SERVICES, DI_TREE_COMPONENTS } from './di-tree';\nimport { ANGULAR_DIRECTIVES_COMPONENTS } from './angular-directives';\nimport { CHANGE_DETECTION_COMPONENTS } from './change-detection';\nimport { STRESS_TESTER_COMPONENTS } from './stress-tester';\nimport { METADATA_TEST_COMPONENTS } from './metadata-test';\nimport { TODO_APP_SERVICES, TODO_APP_COMPONENTS } from './todo-app';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    InputOutputComponent,\n    CounterComponent,\n    MyFormComponent,\n    ControlFormComponent,\n    Form2Component,\n    ...DI_TREE_COMPONENTS,\n    ...ANGULAR_DIRECTIVES_COMPONENTS,\n    ...CHANGE_DETECTION_COMPONENTS,\n    ...STRESS_TESTER_COMPONENTS,\n    ...METADATA_TEST_COMPONENTS,\n    ...TODO_APP_COMPONENTS\n  ],\n  imports: [FormsModule, ReactiveFormsModule, CommonModule, KitchenSinkRoutingModule],\n  providers: [...DI_TREE_SERVICES, ...TODO_APP_SERVICES]\n})\nexport class KitchenSinkModule {}\n","import {Component, Input, Output} from '@angular/core';\n\n@Component({\n    selector: 'attr-from-array',\n    inputs: ['attrIn'],\n    outputs: ['attrOut'],\n    template: `<p>{{attrIn}}</p>`\n})\nexport class MetadataFromArray {\n}\n\n@Component({\n    selector: 'attr-from-decorator',\n    template: `<p>{{attrIn}}</p>`\n})\nexport class MetadataFromDecorator {\n    @Input() attrIn: any;\n    @Output() attrOut: any;\n}\n\n\n@Component({\n    selector: 'attr-from-array-custom',\n    inputs: ['attrIn:attrCustomIn'],\n    outputs: ['attrOut'],\n    template: `<p>{{attrIn}}</p>`\n})\nexport class MetadataFromArrayWithCustomName {\n}\n\n@Component({\n    selector: 'attr-from-decorator-custom',\n    template: `<p>{{attrIn}}</p>`\n})\nexport class MetadataFromDecoratorWithCustomName {\n    @Input('attrCustomIn') attrIn: any;\n    @Output() attrOut: any;\n}\n\n\n@Component({\n  selector: 'metadata-test',\n  template: `\n    <attr-from-array attrIn='Data from the array.'>\n    </attr-from-array>\n\n    <attr-from-decorator attrIn='Data from the decorator.'>\n    </attr-from-decorator>\n\n    <attr-from-array-custom attrCustomIn='Data from array using a custom name.'>\n    </attr-from-array-custom>\n\n    <attr-from-decorator-custom\n      attrCustomIn='Data from decorator using a custom name.'>\n    </attr-from-decorator-custom>\n  `\n})\nexport class MetadataTestComponent {}\n","import { MetadataTestComponent } from './components/metadata-test';\n\nimport {\n  MetadataFromArray, MetadataFromDecorator,\n  MetadataFromArrayWithCustomName, MetadataFromDecoratorWithCustomName\n} from './components/metadata-test';\n\nexport const METADATA_TEST_COMPONENTS = [\n  MetadataTestComponent, MetadataFromArray, MetadataFromDecorator,\n  MetadataFromArrayWithCustomName, MetadataFromDecoratorWithCustomName\n];\n\nexport { MetadataTestComponent };\n","import {\n  Component,\n  Input,\n} from '@angular/core';\n\nimport {\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\n\n@Component({\n  selector: 'stress-rec-item',\n  template: `\n    <ul *ngFor=\"let each of tree\">\n        <li *ngIf=\"each.length > 0\">\n            <stress-rec-item [tree]=\"each\"></stress-rec-item>\n        </li>\n    </ul>\n  `\n})\nexport class StressRecItem {\n  @Input() tree: Array<any>;\n}\n\n@Component({\n  selector: 'stress-tester',\n  template: `\n  <div>\n    <p>Deep Tree Test</p>\n    <form (submit)=\"onSubmit()\" novalidate>\n      <div>\n        <label>Branching factor of tree:\n          <input type=\"number\" id=\"branching-factor\" [formControl]=\"branchingFactor\">\n        </label>\n        <label>Branching depth of tree:\n          <input type=\"number\" [formControl]=\"depth\">\n        </label>\n      </div>\n      <button type=\"submit\">Run</button>\n    </form>\n    <br>\n    <div *ngIf=\"tree\">\n      <stress-rec-item [tree]=\"tree\"></stress-rec-item>\n    </div>\n  </div>\n  `\n})\nexport class StressTesterComponent {\n  private branchingFactor: FormControl = new FormControl();\n  private depth: FormControl = new FormControl();\n\n  private tree: Array<any>;\n\n  private onSubmit() {\n    const branchingFactor = this.branchingFactor.value;\n    const depth = this.depth.value;\n\n    let accum = [];\n    let i = depth;\n    while (i--) {\n      const innerAccum = [];\n\n      let j = branchingFactor;\n      while (j--) {\n        innerAccum.push([...accum]);\n      }\n      accum = innerAccum;\n    }\n    this.tree = accum;\n  }\n}\n","import { StressTesterComponent, StressRecItem } from './components/stress-tester';\n\nexport const STRESS_TESTER_COMPONENTS = [\n  StressTesterComponent, StressRecItem,\n];\n\nexport { StressTesterComponent };\n","import { Component } from '@angular/core';\n\nimport { TodoService } from '../services/todo.service';\nimport { TodoInputComponent } from './todo-input.component';\nimport { TodoListComponent } from './todo-list.component';\n\n@Component({\n  selector: 'todo-app',\n  template: `\n    <div>\n      <todo-input></todo-input>\n      <br />\n      <todo-list></todo-list>\n    </div>\n  `\n})\nexport class TodoAppComponent {}\n","import { Component } from '@angular/core';\nimport { TodoService } from '../services/todo.service';\nimport { TodoModel } from '../models/todo.model';\nimport { FormatService } from '../services/format.service';\n\n@Component({\n  selector: 'todo-input',\n  template: `\n    <div>\n      <form (ngSubmit)=\"onSubmit()\" class=\"flex\">\n        <input type=\"text\" [(ngModel)]=\"todoModel.title\" required class=\"ba pa2\" name=\"title\" />\n        &nbsp;&nbsp;\n        <button class=\"bn br4 pt2 pb2 pl4 pr4 white bg-dark-blue\">Add Todo</button>\n      </form>\n    </div>\n  `\n})\nexport class TodoInputComponent {\n  todoModel: TodoModel = new TodoModel();\n\n  constructor(public todoService: TodoService, public formatService: FormatService) {}\n\n  onSubmit() {\n    this.todoService.addTodo(this.todoModel);\n    this.todoModel = new TodoModel();\n  }\n\n  onClick(logMessage) {\n    const tm = new TodoModel();\n    tm.title = logMessage.value;\n    this.todoService.addTodo(tm);\n    logMessage.value = '';\n  }\n}\n","import { Component } from '@angular/core';\nimport { TodoService } from '../services/todo.service';\n\n@Component({\n  selector: 'todo-list',\n  template: `\n    <table class=\"w-100\">\n      <tr>\n        <th class=\"ba b--black-40 pa2\">Title</th>\n        <th class=\"ba b--black-40 pa2\">Status</th>\n        <th class=\"ba b--black-40 pa2\">Actions</th>\n      </tr>\n      <tr *ngFor=\"let todo of todoService.todos\">\n        <td class=\"ba b--black-40 pa2\">{{ todo.title }}</td>\n        <td class=\"ba b--black-40 pa2\">\n          <p class=\"white bg-dark-red pa2 br2\" *ngIf=\"todo.status == 'started'\">Started</p>\n          <p class=\"white bg-dark-green pa2 br2\" *ngIf=\"todo.status == 'completed'\">Completed</p>\n        </td>\n        <td class=\"ba b--black-40 pa2\">\n          <button class=\"bn br4 pt2 pb2 pl4 pr4 white bg-dark-blue\" (click)=\"todo.toggle()\">Toggle</button>\n        </td>\n      </tr>\n    </table>\n  `\n})\nexport class TodoListComponent {\n  constructor(public todoService: TodoService) {}\n}\n","import {TodoAppComponent} from './components/todo-app.component';\nimport {TodoInputComponent} from './components/todo-input.component';\nimport {TodoListComponent} from './components/todo-list.component';\n\nimport {TodoService} from './services/todo.service';\nimport {FormatService} from './services/format.service';\n\nexport const TODO_APP_COMPONENTS = [\n  TodoAppComponent, TodoInputComponent, TodoListComponent\n];\n\nexport const TODO_APP_SERVICES = [\n  TodoService, FormatService\n];\n\nexport { TodoAppComponent };\n","export class TodoModel {\n  status: String = 'started';\n  constructor(\n    public title: String = ''\n  ) { }\n\n  toggle() {\n    if (this.status === 'started') {\n      this.status = 'completed';\n    } else {\n      this.status = 'started';\n    }\n  }\n}\n","export class FormatService {\n  sayHello() {\n    console.log('hello');\n  }\n}\n","import { TodoModel } from '../models/todo.model';\n\nexport class TodoService {\n  todos: TodoModel[] = [\n    new TodoModel('one'),\n    new TodoModel('two'),\n    new TodoModel('three')\n  ];\n\n  addTodo(value: any): void {\n    this.todos.push(value);\n  }\n}\n"],"sourceRoot":"webpack:///"}